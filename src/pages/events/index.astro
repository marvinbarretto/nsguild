---
import type { EventType } from "../../utils/types";
import { fetchAllEvents } from "../../sanity/queries/event";
import { getCachedGlobals } from "../../utils/cache";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PageTitle from "../../components/shared/PageTitle.astro";
import PageDescription from "../../components/shared/PageDescription.astro";
import { portableTextToPlainText } from "../../utils/portableText";
import PortableText from '../../components/shared/PortableText.astro';
import Seo from "../../components/shared/Seo.astro";
import { buildTitle } from "../../utils/meta";

import ListItem from "../../components/shared/ListItem.astro";

const events: EventType[] = await fetchAllEvents();
const today = new Date().toISOString().split("T")[0]; // Get today's date
console.log("Fetched Events:", events.map(e => ({ title: e.title, date: e.date })));

// Separate upcoming & past events
const upcomingEvents = events.filter(event => event.date >= today);
const pastEvents = events.filter(event => event.date < today);

// Sort events
upcomingEvents.sort((a, b) => a.date.localeCompare(b.date));
pastEvents.sort((a, b) => b.date.localeCompare(a.date)); 

const globals = await getCachedGlobals();
const eventsDescription = globals?.pagesContent?.eventsPageDescription;

const pageTitle = buildTitle("Events");

---

<BaseLayout>
  <Seo slot="head" title={pageTitle} />
  <div class="container">

    <PageTitle title="Events" />
    {eventsDescription && <PageDescription>
      <PortableText portableText={eventsDescription}></PortableText>
    </PageDescription>}

    <!--
      <p><a href={programmeUrl} target="_blank" rel="noopener noreferrer">Our full programme of events is available as a PDF to download or print</a></p>
    -->

    <section class="upcoming">
      <ul class="upcoming__list">
        {upcomingEvents.length > 0 ? (
          upcomingEvents.map((event) => (
  
          <ListItem
            title={event.title}
            date={event.date}
            dateVariant="calendar"
            linkThroughToPage={false}
            slug={event.slug}
            description={Array.isArray(event.description) ? portableTextToPlainText(event.description) : event.description}
            relatedGallery={event.relatedGallery}
            basePath="/events"
          >
            {event.relatedGallery && (
              <span slot="extra">
                <a href={`/gallery/albums/${event.relatedGallery.slug}`} class="gallery-link">
                  ðŸ“· View Gallery
                </a>
              </span>
            )}
          </ListItem>

          ))
        ) : (
          <p>No upcoming events.</p>
        )}
      </ul>
    </section>
  
    <section class="past">
      <h2 class="past__heading">Previous Events</h2>
      <ul class="past__list">
        {pastEvents.length > 0 ? (
          pastEvents.map((event) => (

          <ListItem
            title={event.title}
            date={event.date}
            dateVariant="calendar"
            linkThroughToPage={false}
            slug={event.slug}
            description={Array.isArray(event.description) ? portableTextToPlainText(event.description) : event.description}
            relatedGallery={event.relatedGallery}
            basePath="/events"
          />
          ))
        ) : (
          <p>No past events.</p>
        )}
      </ul>
    </section>
</BaseLayout>


<style lang="scss">

.container {
    display: flex;
    flex-direction: column;
    margin: 0 1rem;
  }

  .upcoming, .past {
    max-width: 72ch;
    margin: 1rem auto 2rem;
  }

  .past__heading {
    margin-bottom: 1rem;
  }

  .upcoming__list, .past__list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }


</style>

