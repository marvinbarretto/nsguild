---
import type { EventType } from "../../utils/types";
import { fetchAllEvents } from "../../sanity/queries/event";
import BaseLayout from "../../layouts/BaseLayout.astro";
import DateDisplay from "../../components/shared/DateDisplay.astro";
import EventCard from "../../components/EventCard.astro";
import { isToday } from "../../utils/dates";
const events: EventType[] = await fetchAllEvents();
// console.log("Fetched Events:", JSON.stringify(events, null, 2));

import { portableTextToPlainText } from "../../utils/portableText";


import ListItem from "../../components/shared/ListItem.astro";


const today = new Date().toISOString().split("T")[0]; // Get today's date
console.log("Fetched Events:", events.map(e => ({ title: e.title, date: e.date })));

// Separate upcoming & past events
const upcomingEvents = events.filter(event => event.date >= today);
const pastEvents = events.filter(event => event.date < today);

// Sort events
upcomingEvents.sort((a, b) => a.date.localeCompare(b.date));
pastEvents.sort((a, b) => b.date.localeCompare(a.date)); 

---
<BaseLayout>
  <h1>Upcoming Events</h1>

  <!-- Upcoming Events -->
  <section>
    <h2>Upcoming Events</h2>
    
    <ul>
      {upcomingEvents.length > 0 ? (
        upcomingEvents.map((event) => (

          <ListItem
            title={event.title}
            date={event.date}
            slug={event.slug}
            description={Array.isArray(event.description) ? portableTextToPlainText(event.description) : event.description} 

            basePath="/events"
          />

        ))
      ) : (
        <p>No upcoming events.</p>
      )}
    </ul>
  </section>

  <!-- Past Events -->
  <section>
    <h2>Past Events</h2>
    <ul>
      {pastEvents.length > 0 ? (
        pastEvents.map((event) => (
          <ListItem
            title={event.title}
            date={event.date}
            slug={event.slug}
            description={event.description || ""}
            basePath="/events"
          />
        ))
      ) : (
        <p>No past events.</p>
      )}
    </ul>
  </section>
</BaseLayout>


<style>
.events-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
</style>
