---
import type { EquipmentType } from "../../utils/types";
import { fetchAllEquipment } from "../../sanity/queries/equipment";
import { getCachedGlobals } from "../../utils/cache";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PageTitle from "../../components/shared/PageTitle.astro";
import PageDescription from "../../components/shared/PageDescription.astro";
import Seo from "../../components/shared/Seo.astro";
import { buildTitle } from "../../utils/meta";
import PortableText from '../../components/shared/PortableText.astro';

const equipmentList: EquipmentType[] = await fetchAllEquipment();
console.log("Fetched Equipment:", JSON.stringify(equipmentList, null, 2));  // âœ… Debug Output

const globals = await getCachedGlobals();
const equipmentDescription = globals?.pagesContent?.equipmentPageDescription;

const pageTitle = buildTitle("Equipment");

---

<BaseLayout title="Equipment">
  <Seo slot="head" title={pageTitle} />
  <PageTitle title="Equipment" />
  {equipmentDescription && <PageDescription>
    <PortableText portableText={equipmentDescription}></PortableText>
  </PageDescription>}

  <!-- TODO: Astro componentise this -->
  <div class="container">
    <section class="for-sale">
      <h3>For sale</h3>
      {equipmentList.filter(item => item.category === "For Sale").map((item) => (
        <li>
          <a href={`/equipment/${item.slug}`}>
            {item.title}
          </a>
        </li>
      ))}
      {equipmentList.filter(item => item.category === "For Sale").length === 0 && (
        <p>Nothing at the moment</p>
      )}
    </section>

    <section class="for-loan">
      <h3>For loan (members only)</h3>
      {equipmentList.filter(item => item.category === "For Loan").map((item) => (
        <li>
          <a href={`/equipment/${item.slug}`}>
            {item.title}
          </a>
        </li>
      ))}
      {equipmentList.filter(item => item.category === "For Loan").length === 0 && (
        <p>Nothing at the moment</p>
      )}
    </section>
  </div>
</BaseLayout>

<style lang="scss">

  @use "../../styles/_breakpoints.scss" as *;

  .container {
    display: flex;
    flex-direction: column  ;
    gap: 2rem;
    @media (min-width: $BREAKPOINT_SMALL) {
     flex-direction: row;
    }
  }

  .for-sale, .for-loan {

    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 1rem;
    flex: 1;
    padding: 1rem;

    li {
      background-color: white;
      border: dotted 3px #c8eaff;
      list-style: none;
      a {
        color: #333;
        padding: 4px;
      }
    }
  }
  

    nav {
      display: flex;
      justify-content: center;
      gap: .5rem;
      margin: 0 1rem;
    }
    h3 {
      border: dotted 3px #c8eaff;
      
      padding: .5rem 1rem;
      border-radius: 5px;
      text-decoration: none;
      transition: all 0.2s ease;
      background-color: #333;
      color: white;
      font-weight: bold;
    }
</style>
