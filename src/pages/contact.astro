---
import BaseLayout from '../layouts/BaseLayout.astro';
import PageTitle from '../components/shared/PageTitle.astro';
import PageDescription from '../components/shared/PageDescription.astro';
import { buildTitle } from "../utils/meta";
import Seo from "../components/shared/Seo.astro";
import Image from "astro/components/Image.astro";
import villageHall from '../images/village-hall.webp';
import { fetchContactPage } from '../sanity/queries/contact';
const accessKey = import.meta.env.WEB3FORMS_ACCESS_KEY;

const vm = await fetchContactPage();
const pageTitle = buildTitle(vm.title);
---

<BaseLayout title={vm.title}>
  <Seo slot="head" title={pageTitle} />
  <PageTitle title={vm.title} />
  <div class="container" itemscope itemtype="https://schema.org/Organization">

    <PageDescription>
      <p>Email us directly at <a itemprop="email" href="mailto:mail@norfolksuffolkwsd.org.uk">mail@norfolksuffolkwsd.org.uk</a><br>or use the form below</p>
      <form id="form" novalidate>
        <input type="hidden" name="access_key" value={accessKey} />
        <input type="checkbox" class="hidden" style="display:none" name="botcheck" />

        <!-- Name Field -->
        <div class="form-group">
          <label for="name">Name</label>
          <input
            id="name"
            type="text"
            name="name"
            required
            aria-describedby="name-feedback"
          />
        </div>

        <div class="form-group">
          <label for="email">Email address</label>
          <input
            id="email"
            type="email"
            name="email"
            required
            aria-describedby="email-feedback"
          />
        </div>

        <!-- Message Field -->
        <div class="form-group">
          <label for="message">Message</label>
          <textarea
            id="message"
            name="message"
            required
            aria-describedby="message-feedback"
          ></textarea>
        </div>

        <!-- Submit Button -->
        <button class="btn btn--primary" type="submit">Send Message</button>
        <div id="result" class="result" aria-live="polite"></div>
      </form>
    </PageDescription>


    <section class="location">
      <span class="hidden" itemprop="name">Norfolk and Suffolk Guild of Weavers, Spinners and Dyers</span>

      <PageDescription>
        <Image 
          src={villageHall} 
          alt="Village Hall" 
          width={300} 
          height={300} 
          format="webp"
          quality={80}
        />

        <p class="address" itemprop="address" itemscope itemtype="https://schema.org/PostalAddress">
          <span itemprop="streetAddress">The Village Hall</span><br>
          <span itemprop="addressLocality">Sun Road</span><br>
          <span itemprop="addressRegion">Broome</span><br>
          <span itemprop="addressRegion">Nr Bungay</span><br>
          <span itemprop="postalCode">NR35 2RW</span>
        </p>
      </PageDescription>
    </section>
  </div>
</BaseLayout>

<style lang="scss">
  @use "../styles/_breakpoints.scss" as *;

  .location img {
    max-width: 300px;
  }

  .container {
    display: flex;
    justify-content: center;
    flex-direction: column;
    gap: 1rem;
    margin: 1rem;
    @media (min-width: $BREAKPOINT_MEDIUM) {
      flex-direction: row;
    }
  }

  .btn--primary {
    background-color: var(--accent);
    color: white;
  }

  #form {
    max-width: 700px;
    margin: 0 auto;
    text-align: left;
  }
  .form-group {
    margin-bottom: 1rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: bold;
  }

  input, textarea, button {
    display: block;
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 1rem;
  }

  textarea {
    resize: vertical;
    min-height: 100px;
  }

  .feedback {
    color: #dc3545; /* Red for errors */
    display: none;
  }

  .is-invalid + .feedback {
    display: block;
  }

  .result {
    margin-top: 1rem;
    font-size: 1rem;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("form");
    const result = document.getElementById("result");

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      form.classList.add("was-validated");

      if (!form.checkValidity()) {
        form.querySelectorAll(":invalid")[0].focus();
        return;
      }

      const formData = new FormData(form);
      const data = Object.fromEntries(formData);

      result.textContent = "Sending...";
      result.className = "result"; // Reset feedback class

      try {
        const response = await fetch("https://api.web3forms.com/submit", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });

        const json = await response.json();
        if (response.ok) {
          result.classList.add("success");
          result.textContent = json.message || "Message sent successfully!";
        } else {
          result.classList.add("error");
          result.textContent = json.message || "Failed to send message.";
        }
      } catch (error) {
        console.error(error);
        result.classList.add("error");
        result.textContent = "Something went wrong!";
      } finally {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => (result.textContent = ""), 5000);
      }
    });
  });
</script>
