---
import BaseLayout from '../../layouts/BaseLayout.astro';
import type { Publication } from '../../utils/types';
import { fetchAllPublications, fetchPagesContent } from '../../utils/sanity';
import PageTitle from '../../components/shared/PageTitle.astro'; 
import PageDescription from '../../components/shared/PageDescription.astro'; 

import PortableText from '../../components/shared/PortableText.astro';
import { buildTitle } from "../../utils/meta";

import Seo from "../../components/shared/Seo.astro";

const pagesContent = await fetchPagesContent();
const distaffDescription = pagesContent?.distaffPageDescription;
const publications = await fetchAllPublications();

const pageTitle = buildTitle("Distaff and Shuttle");

---

<Seo title={pageTitle} />

<BaseLayout>

  <!-- TODO: make dynamic -->

  <div class="container">
    <PageTitle title="Distaff and Shuttle" />
    {distaffDescription && <PageDescription>
      <PortableText portableText={distaffDescription}></PortableText>
    </PageDescription>}

    {publications.map((publication: Publication, index: number) => {
      const isLatest = index === 0; 
  
      return (
        <div>
          <PageDescription variant="secondary">
            <h2>{publication.title}</h2>
          </PageDescription>
  
          {isLatest ? (
            <iframe
              src={publication.documentUrl}#toolbar=0
              width="100%"
              height="600px"
              title={publication.title}
            />

          ) : (
            <a
              href={publication.documentUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="btn"
            >
              Download PDF
            </a>
          )}
        </div>
      );
    })}
  </div>

</BaseLayout>

<style lang="scss">
  @use "../../styles/_breakpoints.scss" as *;

  .container {
    margin: 1rem;
  }



  

  .pub-grid {
    display: grid;
;
    grid-template-columns: 1fr;
    gap: 1rem;
    text-align: center;

    @media (min-width: $BREAKPOINT_TABLET_PORTRAIT) {
      grid-template-columns: 1fr 1fr;
    }
  }

  iframe {
    border: solid 5px white;
    border-radius: 8px;
  }

  /* TOOD: avoid repitition */
  .list-item {
    background-color: var(--bg-light);
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 10px;


  }

  .list-item a {
    text-decoration: none;
    display: flex;flex-direction: column; gap: 1rem;
    color: inherit;
    height: 100%;
  }

  .list-item p {
    flex: 1;
  }

  .snippet {
    font-size: 0.9rem;
    color: #444;
    margin-top: 5px;
  }
</style>
