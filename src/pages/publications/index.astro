---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCachedGlobals } from '../../utils/cache';
import PageTitle from '../../components/shared/PageTitle.astro'; 
import PageDescription from '../../components/shared/PageDescription.astro'; 

import PortableText from '../../components/shared/PortableText.astro';
import { buildTitle } from "../../utils/meta";

import Seo from "../../components/shared/Seo.astro";
import { fetchArchivePublications, fetchLatestPublication } from '../../sanity/queries/publications';

const globals = await getCachedGlobals();
const distaffDescription = globals?.pagesContent?.distaffPageDescription;
const latest = await fetchLatestPublication();
const archive = await fetchArchivePublications();

const pageTitle = buildTitle("Distaff and Shuttle");

---

<BaseLayout>
  <Seo slot="head" title={pageTitle} />
  <div class="container">
    <PageTitle title="Distaff and Shuttle" />
    {distaffDescription && <PageDescription>
      <PortableText portableText={distaffDescription}></PortableText>
    </PageDescription>}

      {latest && (
        <div>
          <PageDescription variant="secondary">
            <h2>{latest.title}</h2>
          </PageDescription>
          <iframe
            src={`${latest.documentUrl}#toolbar=0`}
            width="100%"
            height="600px"
            title={latest.title}
          />
        </div>
      )}

      {archive.length > 0 && (
        <div class="archive">
          <h3 class="archive__heading">Archive editions</h3>
          <ol class="archive__list">
            {archive.map((publication) => (
              <li>
                <a
                  href={publication.documentUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="btn"
                >
                  Download {publication.title}
                </a>
              </li>
            ))}
          </ol>
        </div>
      )}

  </div>

</BaseLayout>

<style lang="scss">
  @use "../../styles/_breakpoints.scss" as *;

  .container {
    margin: 1rem;
  }


.archive {
  margin: auto;
  text-align: center;
}

.archive__heading {
  margin-bottom: .5rem;
}

.archive__list {
  display: flex;
  flex-direction: column;
  gap: .25rem;
}
  

  .pub-grid {
    display: grid;
;
    grid-template-columns: 1fr;
    gap: 1rem;
    text-align: center;

    @media (min-width: $BREAKPOINT_TABLET_PORTRAIT) {
      grid-template-columns: 1fr 1fr;
    }
  }

  iframe {
    border: solid 5px white;
    border-radius: 8px;
  }

  /* TOOD: avoid repitition */
  .list-item {
    background-color: var(--bg-light);
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 10px;


  }

  .list-item a {
    text-decoration: none;
    display: flex;flex-direction: column; gap: 1rem;
    color: inherit;
    height: 100%;
  }

  .list-item p {
    flex: 1;
  }

  .snippet {
    font-size: 0.9rem;
    color: #444;
    margin-top: 5px;
  }
</style>
