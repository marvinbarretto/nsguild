---
import type { GalleryImage } from '../utils/types';

export interface Props {
  images: GalleryImage[];
  columnSize?: number; // Size in pixels for the minimum column width
  style?: 'default' | 'polaroid'; // Restrict style to specific values
}

const { 
  images, 
  style = 'default',
  columnSize = 150 
}: Props = Astro.props;

---

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />

<div class="gallery-grid">
  {images.map((image, index) => (
    <a
      href={image.url}
      class="gallery-item glightbox"
      data-glightbox={image.caption ? `title: ${image.caption}` : undefined}
    >
      <img
        src={image.thumbnailUrl}
        alt={image.altText || `Image ${index + 1}`}
        loading="lazy"
      />
    </a>
  ))}
</div>

<script>
  import GLightbox from 'glightbox';

  // Initialize lightbox on DOM content load
  document.addEventListener('DOMContentLoaded', () => {
    GLightbox({
      // selector: '.glightbox',
      touchNavigation: true,
      loop: true,
      zoomable: true,
      openEffect: 'zoom',
      closeEffect: 'fade',
    });
  });
</script>

<style>
  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--column-size), 1fr));
    gap: 0.5rem;
  }

  .gallery-item {
    aspect-ratio: 1;
    overflow: hidden;
    background: #f5f5f5;
  }

  .gallery-item img {
    width: 100%;
    height: auto; /* âœ… Fix: Preserve aspect ratio */
    object-fit: cover;
    transition: transform 0.2s ease;
  }

</style>
