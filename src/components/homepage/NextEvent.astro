---
import { fetchNextEvent } from "../../sanity/queries/event";
import type { EventType } from "../../utils/types";
import { daysUntil, isToday } from "../../utils/dates";
import DateDisplayComponent from "../shared/DateDisplay.astro"
import PortableText from "../shared/PortableText.astro";

const event: EventType | null = await fetchNextEvent();

---

<!-- TODO: Allow for no events as well -->
{event && (
  <section class="next-event">
      <h2 class="next-event__title">Next Event</h2>
      <div class="next-event__content">
          
        <div class="next-event__event">
          {/* Count how many days until the event */}
          <span class="next-event__days">
            
            {isToday(event.date) && <span class="badge">Today!</span>}
            {!isToday(event.date) && <span class="badge">in {daysUntil(event.date)} days</span>}
          </span>

          <h3>
            {event.title}
            {isToday(event.date) && <span class="badge">Today!</span>}
          </h3>
          <div class="portable-text">
            <PortableText portableText={event.description} />
          </div>
        </div>
        <DateDisplayComponent date={event.date} variant="calendar" />
      </div>
  </section>
)}

<style>

  .next-event {
    background: var(--bg-medium);
    padding: 1rem;
    border-radius: 8px;
  }

  .next-event__title {
    /* background-color: #333;
    color:#FFF;
    line-height: 1;
    padding: 3px; */
    /* display: inline-block; */
    /* transform: rotate(-4deg); */
    /* margin-top: -2.5rem; */
    /* font-family: "Helvetica", sans-serif; */
  }

  .next-event__content {
    display: flex;
    gap: .75rem;
  }

  .next-event__event {
    display: flex;
    flex-direction: column;
  }

  .next-event .date {
    font-size: 0.9rem;
    color: #666;
  }

  /* TODO: Consolidate styles */

  .badge {
    background: #333;
    color: white;
    font-size: 0.8rem;
    padding: 3px 6px;

  }
</style>
