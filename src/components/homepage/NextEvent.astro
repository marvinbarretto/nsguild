---
import { fetchNextEvent } from "../../sanity/queries/event";
import type { EventType } from "../../utils/types";
import { getEventTiming } from "../../utils/dates";
import DateDisplayComponent from "../shared/DateDisplay.astro"
import PortableText from "../shared/PortableText.astro";

const event: EventType | null = await fetchNextEvent();
const timing = getEventTiming(event!.date);

---

<!-- TODO: Allow for no events as well -->
{event && (
  <section class="next-event">
    <div class="next-event__title">
      <h2>Next Event</h2>
      <span class="next-event__days">
        <span class={`badge ${timing.className}`}>{timing.label}</span>
      </span>
    </div>
      <div class="next-event__content">
        <div class="next-event__event">
          <h3>{event.title}</h3>
          <PortableText portableText={event.description} />
        </div>
        <DateDisplayComponent date={event.date} variant="calendar" />
      </div>
  </section>
)}

<style lang="scss">
  @use "../../styles/_breakpoints.scss" as *;

  .next-event {
    background: var(--bg-medium);
    background-image: url('/images/noise.webp');
    background-blend-mode: exclusion;
    border-radius: 8px;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .next-event__title {
    gap: .5rem;
    background-color: #003f42;
    border-top-right-radius: 8px;
    border-top-left-radius: 8px;
    color:#FFF;
    line-height: 1;
    padding: .5rem 1rem;
    display: inline-flex;
    align-items: center;
    margin-bottom: .5rem;
  }

  .next-event__content {
    display: flex;
    gap: .75rem;
    padding-inline: 1rem;
    padding-bottom: 1rem;
  }

  .next-event__event {
    display: flex;
    flex-direction: column;
    flex: 1;
  }

  .next-event .date {
    font-size: 0.9rem;
    color: #666;
  }

  .badge {
    background: rgba(0, 0, 0, 0.5);
    color: white;
    font-size: 0.8rem;
    padding: 3px 6px;
    border-radius: 4px;
  }
</style>
